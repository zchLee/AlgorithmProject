package com.lea.datastructure.linkedlist;

/**
 * @author lzc
 * @create 2020-10-18 20:35
 *
 * 链表是一种内存上非连续、非顺序的数据结构，由若干节点（node）组成。
 *      1.单向链表：每个节点包含两部分，一部分是存放数据的变量data，另一部分是存放下一个节点位置的指针next，
 *        链表的第一个节点称为头节点，最后一个节点称为尾节点，尾节点的next指针为空
 *   单向链表有个问题，那就是如何找到上个节点？由此引出双向链表
 *      2. 双向链表：他的每个节点除了拥有data和next指针，还拥有指向前置节点的prev指针
 *
 * 链表在内存中的分配方式
 *  相对于数组在内存中开辟一个连续的内存空间，链表是随机存储的，通过next节点在内存中找到下个节点。
 *  可以这么理解，在java中，每次new一个对象，在内存中都会分配一个地址，链表每个节点都是new出来的，而数组是一次就new好的
 */
public class Main {
}
